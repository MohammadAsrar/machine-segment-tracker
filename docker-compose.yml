version: "3.8"

services:
  # MongoDB service
  mongodb:
    image: mongo:4.4
    container_name: machine-segment-tracker-mongodb
    restart: always
    volumes:
      - mongodb_data:/data/db
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_ROOT_USERNAME:-admin}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_ROOT_PASSWORD:-password}
    networks:
      - app-network
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongo localhost:27017/machine-segment-tracker --quiet
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend API service
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: machine-segment-tracker-backend
    restart: always
    depends_on:
      - mongodb
    environment:
      - NODE_ENV=production
      - PORT=5000
      - MONGODB_URI=mongodb://${MONGO_ROOT_USERNAME:-admin}:${MONGO_ROOT_PASSWORD:-password}@mongodb:27017/machine-segment-tracker?authSource=admin
      - CORS_ORIGIN=${CORS_ORIGIN:-http://localhost}
    ports:
      - "5000:5000"
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Frontend service
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: machine-segment-tracker-frontend
    restart: always
    depends_on:
      - backend
    ports:
      - "80:80"
    networks:
      - app-network
    environment:
      - REACT_APP_API_URL=http://backend:5000/api

networks:
  app-network:
    driver: bridge

volumes:
  mongodb_data:
    driver: local
